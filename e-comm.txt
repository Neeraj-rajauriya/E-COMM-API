E-commerce API
Product Management --> Add a product, Get products, Get Specific product, filter product, rate product
User Management --> Sign up and Login page
Cart Management --> Add to Cart, Remove from the Cart, Get the Cart
Order Management --> Place the order, Update the Status, Get Status



swagger 2.0 filter
{
    "swagger":"2.0",
    "info":{
        "version":"1.0.0",
        "description":"API for E-Commerce application",
        "title":"E-commerce API"
    },
    "host":"localhost:8000",
    "securityDefinitions":{
           "JWT":{
            "in":"header",
            "name":"Authorization",
            "type":"apiKey"
           }
    },
    "paths":{
        "/api/product": {
            "get":{
                "summary":"get product",
                "description":"User will get all products",
                "security":[
                    {
                        "JWT":{}
                    }
                ],
                "responses":{
                    "200": {
                        "description":"OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/user/signin": {
            "post":{
                "summary":"Login",
                "description":"User login to get token",
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "description":"User Credentials",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email":{
                                    "type": "string"
                                },
                                "password":{
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses":{
                    "200": {
                        "description":"OK"
                    },
                    "400": {
                        "description": "Incorrect Credentials"
                    }
                }
            }
        }
    }
}




db.products.aggregate([
    {
        $unwind:"$ratings"
    },
    {
        $group:{
           _id:"$name",
           averageRating:{$avg:"$ratings.rating"}
        }
    }
]).toArray();


db.products.aggregate([
    {
        $project:{name:1,countOfRating:{
            $cond:{if:{$isArray:"$ratings"}
        ,then:{$size:"$ratings"},else:0}
        }}
    },{
        $sort:{countOfRating:-1}
    },{
        $limit:1
    }
])